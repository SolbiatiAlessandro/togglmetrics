extends layout

block content
	.row.p-4
		.col-2
			.card.h-100
				.card-body
					h5.card-title togglmetrics
					h6.card-subtitle.mb-2.text-muted toggl sent #{length} Time Entries
					a.card-link.text-info(onclick='openDebug()') Debug
		.col-4
			.card.h-100
				.card-body
					form(id='updateForm' method='post', action='/', enctype='application/json')
						.form-group
							input#toggl-api-key.form-control(type='text' name='toggl-api-key' placeholder='your toggl account api key' required='')
							small.form-text.text-muted 
								| look for api token at 
								a(href="https://track.toggl.com/profile" target="_blank") https://track.toggl.com/profile
						.form-group
							input#workspace-id.form-control(type='text' placeholder='your workspace id' name='workspace-id' required='')
							small.form-text.text-muted 
								| go at 
								a(href="https://track.toggl.com/settings" target="_blank") https://track.toggl.com/settings 
								| and copy the number from the url 
						button.btn.btn-primary(type='submit') update token

		.col-6
			.card.h-100
				.card-header
					h5.card-title Your Projects
					h6.card-subtitle.mb-2.text-muted What categories do your projects belong to?
				.card-body.btn-group.flex-wrap
					each project in unique_projects
						.dropdown.p-2
							button.project.btn.btn-secondary.dropdown-toggle(type='button' data-toggle='dropdown' aria-haspopup='true' aria-expanded='false' id=project)
								| #{project}
							.dropdown-menu(aria-labelledby=project)
								each category, index in categories
									button.dropdown-item(onclick=`setProjectCategory('${project}', ${index});open_updateProjectsFooter();`) #{category}
				.card-footer(id="updateProjectsFooter", style="display:none")
					button.btn.btn-primary.card-link(onclick="updateProjects();") Update Projects

	.card.m-4
		.card-body#no-chart-nudge(style="display:none;")
			h5.card-title No Data Yet..
			h6.card-subtitle.mb-2.text-muted Put your projects into categories to see the breakdown of your data here!
		canvas(style="width:60%;height:600px", id="canvas")
	div(id="debug" style="display:none;" )
		button(onclick='closeDebug()') hide debug informations
		p #{debug}
		p unique dates are #{unique_dates}

	script.
		// page logic
		const displayElem = (val) => {return (id) => {document.getElementById(id).style.display = val;}};
		const showElem = (id) => {return () => {displayElem('block')(id)}};
		const hideElem = (id) => {return () => {displayElem('none')(id)}};

		const openDebug = showElem('debug');
		const closeDebug = hideElem('debug');
		const open_updateProjectsFooter = showElem('updateProjectsFooter');

	script.
		// togglmetrics logic
		var tokenData = !{JSON.stringify(token_data)};
		var uniqueProjects = !{JSON.stringify(unique_projects)};
		var categoriesColor = !{JSON.stringify(categories_color)};
		var barChartData = !{JSON.stringify(duration_bar_chart)};
		var chartNotEmpty = barChartData.datasets.some((dataset) => (
			dataset.data.some((x) => (x > 0.0))
		));

		const setProjectCategory = function(project, category){
			// category is 0, 1, 2

			// update UI
			document.getElementById(project).style.background = categoriesColor[category]
			document.getElementById(project).setAttribute("category", category)

			// set the value in the hidden input from updateForm
			document.getElementById(project + "__form").setAttribute("value", category)
		}

		const updateProjects = () => {updateForm.submit();}
		$(document).ready(() => {
			var updateForm = $("#updateForm")[0];
			uniqueProjects.forEach(function(project){
				var category = tokenData[project];
				
				// add project field to update form
				const hiddenField = document.createElement('input');
				hiddenField.id = project + "__form";
				hiddenField.type = 'hidden';
				hiddenField.name = project;
				updateForm.appendChild(hiddenField);

				setProjectCategory(project, category);
			});

			document.getElementById('toggl-api-key').value = tokenData['toggl-api-key'];
			document.getElementById('workspace-id').value = tokenData['workspace-id'];

			if (!chartNotEmpty) { hideElem('canvas')(); showElem('no-chart-nudge')();  }
		});




	script.

		// Chart.js logic
		window.randomScalingFactor = function() {
			return 20
		};
		window.onload = function() {
			var ctx = document.getElementById('canvas').getContext('2d');
			window.myBar = new Chart(ctx, {
				type: 'bar',
				data: barChartData,
				options: {
					title: {
						display: false,
						text: 'Chart.js Bar Chart - Stacked'
					},
					tooltips: {
						mode: 'index',
						intersect: false
					},
					responsive: true,
					scales: {
						xAxes: [{
							stacked: true,
						}],
						yAxes: [{
							stacked: true
						}]
					}
				}
			});
		};

